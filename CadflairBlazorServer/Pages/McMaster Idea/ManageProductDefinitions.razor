@using Row = CadflairDataAccess.Models.Row;


@if (_selectedProductDefinition == null)
{
    <MudPaper Class="d-flex flex-column gap-3 pa-3">
        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.h6">Select A Product</MudText>
            <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="AddProductDefinition_OnClick">Add Product</MudButton>
        </MudStack>
        <MudPaper Outlined MinHeight="300px" MaxHeight="600px" Class="d-flex flex-column overflow-auto">
            @if (ProductDefinitions.Any())
            {
                <MudList Clickable>
                    @foreach (var productDefinition in ProductDefinitions)
                    {
                        <MudListItem Text="@productDefinition.Name" OnClick="() => ProductDefinition_OnClick(productDefinition)" />
                    }
                </MudList>
            }
            else
            {
                <div class="flex-grow-1 d-flex flex-column justify-center align-center">
                    <MudText>Click <strong>Add Product</strong> to add a new product</MudText>
                </div>
            }
        </MudPaper>
    </MudPaper>
}
else
{
    <!-- product details -->
    <MudPaper Class="pa-3 d-flex flex-column gap-3">
        <div>
            <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="() => ProductDefinition_OnClick(null)">Back</MudButton>
        </div>

        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.h6">Edit Product Definition</MudText>
            <MudButton OnClick="DeleteProductDefinition_OnClick" StartIcon="@Icons.Material.Filled.Delete">Delete</MudButton>
        </MudStack>
        <MudStack Row>
            <ThumbnailImage Uri="@_selectedProductDefinition.ThumbnailUri" UriUpdated="UpdateThumbnail" Height="200" Width="200" EditMode/>
            <MudStack Class="flex-grow-1">
                <MudTextField T="string" Value="_nameField" ValueChanged="Name_ValueChanged" Label="Name" Variant="Variant.Outlined" Immediate Required MaxLength="50" />
                <MudTextField T="string" Value="_descriptionField" ValueChanged="Description_ValueChanged" Label="Description" Variant="Variant.Outlined" Lines="3" MaxLength="500" Immediate />
                <MudTextField Value="_category?.Name" Label="Category" Placeholder="Select category" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Edit" OnAdornmentClick="UpdateCategory_OnClick"/>
            </MudStack>
        </MudStack>
        <MudToolBar>
            <MudSpacer />
            <MudButton OnClick="UpdateProductDefinition_OnClick" Variant="Variant.Filled" Color="Color.Primary" Disabled="_isDirty == false">Save Changes</MudButton>
        </MudToolBar>
    </MudPaper>

    @if(_productTable != null)
    {
        <!-- product table -->
        <MudPaper Class="pa-3 d-flex flex-column gap-3 relative">
            <MudOverlay Visible="_importingExcel" Class="mud-background" Style="z-index:1400;" Absolute>
                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.button">Importing Excel data...</MudText>
                    <MudProgressCircular Color="Color.Default" Size="Size.Medium" Indeterminate />
                </MudStack>
            </MudOverlay>

            <MudText Typo="Typo.h6">Product Table</MudText>
            <MudPaper Outlined Class="d-flex flex-row">
                <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="AddRow_OnClick" Disabled="!_productTable.Columns.Any()">Add Product</MudButton>
                <MudButton StartIcon="@Icons.Material.Filled.Edit" OnClick="EditColumns_OnClick">Edit Columns</MudButton>
                @if (_productTable.Columns.Any())
                {
                    <MudButton StartIcon="@Icons.Material.Filled.Clear" OnClick="ResetProductTable_OnClick">Clear All</MudButton>
                }
                <MudSpacer />
                <div style="max-width:300px;" class="pr-3">
                    <MudTextField @bind-Value="_searchString" Placeholder="Search" Immediate Clearable
                          Variant="Variant.Text" Margin="Margin.Dense" 
                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" />
                </div>
            </MudPaper>

            <MudTable Items="_productTable.Rows" Filter="_searchFilter"
                      RowEditPreview="(row) => RowEditPreview((Row)row)"
                      RowEditCancel="(row) => RowEditCancel((Row)row)"
                      RowEditCommit="async(row) => await RowEditCommit((Row)row)"
                      IsEditRowSwitchingBlocked="true" ApplyButtonPosition="TableApplyButtonPosition.End" CanCancelEdit EditTrigger="TableEditTrigger.RowClick"
                      FixedHeader HorizontalScrollbar Height="65dvh" Class="flex-grow-1 flex-shrink-1 overflow-auto" Outlined>
                <NoRecordsContent>
                    @if(string.IsNullOrWhiteSpace(_searchString))
                    {
                        @if (_productTable.Columns.Any())
                        {
                            <MudText>No products.</MudText>
                            <MudText>Click <strong>Add Product</strong> to create a new product.</MudText>
                        }
                        else
                        {
                            <MudText>Click <strong>Edit Columns</strong> to get started.</MudText>
                            <MudText Class="my-5"><strong>OR</strong></MudText>
                            <MudText>Import data from and Excel file:</MudText>
                            <MudFileUpload T="IBrowserFile" FilesChanged="ImportExcel_OnClick" Accept=".xls, .xlsx">
                                <ButtonTemplate>
                                    <MudButton StartIcon="@Icons.Material.Filled.UploadFile" Variant="Variant.Filled" Color="Color.Primary" HtmlTag="label" for="@context">Import Excel</MudButton>
                                </ButtonTemplate>
                            </MudFileUpload>
                        }
                    }
                    else
                    {
                        <MudText>No results.</MudText>
                    }
                </NoRecordsContent>
                <HeaderContent>
                    <MudTh Style="min-width:15ch;">Part Number</MudTh>
                    @*<MudTh Style="min-width:15ch;"><MudTableSortLabel SortBy="new Func<Row, object>(x => x.PartNumber)">Part Number</MudTableSortLabel></MudTh>*@
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudTh Style="min-width:15ch;">@column.Header</MudTh>
                        @*<MudTh Style="min-width:15ch;"><MudTableSortLabel SortBy="new Func<Row, object>(x => x.TableValues.FirstOrDefault(i => i.ColumnId == column.Id)?.Value!)">@column.Header</MudTableSortLabel></MudTh>*@
                    }
                    <MudTh>Attachments</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Part Number">@context.PartNumber</MudTd>
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudTd DataLabel="@column.Header">@context.TableValues.FirstOrDefault(i => i.ColumnId == column.Id)?.Value</MudTd>
                    }
                    <MudTd DataLabel="Attachments">@context.Attachments.FirstOrDefault()?.ForgeObjectKey</MudTd>
                </RowTemplate>
                <RowEditingTemplate>
                    <MudTd DataLabel="Part Number">
                        <MudTextField @bind-Value="@context.PartNumber" Required />
                    </MudTd>
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudTd DataLabel="@column.Header">
                            <MudTextField @bind-Value="@context.TableValues.First(i => i.ColumnId == column.Id).Value" Required />
                        </MudTd>
                    }
                    <MudTd DataLabel="Attachments">@context.Attachments.FirstOrDefault()?.ForgeObjectKey</MudTd>
                </RowEditingTemplate>
            </MudTable>

            <!-- events -->
            @*            <MudPaper Height="350px" Class="d-flex flex-column pa-3 mud-background-gray flex-shrink-0">
    <MudText Typo="Typo.h6">Events</MudText>
    <MudStack Class="flex-grow-1 overflow-auto">
    @foreach (var message in _events)
    {
    <MudText Typo="@Typo.body2">@message</MudText>
    }
    </MudStack>
    @if (_events.Count > 0)
    {
    <div class="d-flex">
    <MudSpacer />
    <MudButton Variant="Variant.Filled" OnClick="() => _events.Clear()">Clear</MudButton>
    </div>
    }
    </MudPaper>
    *@
        </MudPaper>
    }

    <!-- attachments -->
    <MudPaper Class="pa-3 d-flex flex-column gap-3">
        <MudText Typo="Typo.h5">Upload Attachments</MudText>
        <MudText Typo="Typo.body1">Drag and drop files to upload attachments. Files will be linked to products with matching part numbers.</MudText>
        <MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="Attachments_FilesChanged" Accept=".stp, .step, .pdf, .ipt" MaximumFileCount="999"
                   InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0;" Hidden="_fileUploads.Any()"
                   @ondragenter="@SetDragStyle" @ondragleave="@ClearDragStyle" @ondrop="@ClearDragStyle">
            <ButtonTemplate>
                <MudPaper Height="400px" Outlined Class="overflow-auto" Style="@($"border-color: var(--mud-palette-lines-inputs); {_dragStyle}")">
                    @if (_fileUploads.Any())
                    {
                        <div class="flex-grow-1 overflow-auto">
                            @foreach (FileUpload upload in _fileUploads)
                            {
                                <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="pa-3">
                                    <MudText Style="text-overflow: ellipsis; overflow:hidden; white-space:nowrap;">@upload.File.Name</MudText>
                                    <MudTooltip Text="@upload.Status" Placement="Placement.Left" RootClass="d-flex ma-0 pa-0">
                                        @switch (upload.Status)
                                        {
                                            case "Not started":
                                                <MudIcon Icon="@Icons.Material.Filled.HourglassTop" Color="Color.Default" Size="Size.Small" />
                                                break;

                                            case "Processing":
                                                <MudProgressCircular Indeterminate Size="Size.Small" />
                                                break;

                                            case "Success":
                                                <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success" Size="Size.Small" />
                                                break;

                                            case "Part number not found":
                                            case "Invalid file extension":
                                            case "Invalid file name":
                                                <MudIcon Icon="@Icons.Material.Filled.Error" Color="Color.Warning" Size="Size.Small" />
                                                break;

                                            case "Error":
                                                <MudIcon Icon="@Icons.Material.Filled.Error" Color="Color.Error" Size="Size.Small" />
                                                break;
                                        }
                                    </MudTooltip>
                                </MudStack>
                                <MudDivider />
                            }
                        </div>
                    }
                    else
                    {
                        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mud-height-full">
                            <MudIcon Icon="@Icons.Material.Filled.UploadFile" Size="Size.Large" Color="Color.Default" />
                            <MudText Typo="Typo.body1">Drop files or click</MudText>
                        </MudStack>
                    }
                </MudPaper>
            </ButtonTemplate>
        </MudFileUpload>
    </MudPaper>

    <!-- security -->
    <MudPaper Class="pa-3 d-flex flex-column gap-3">
        <MudText Typo="Typo.h5">Security</MudText>
        <MudCheckBox T="bool">Allow attachment downloads.</MudCheckBox>
        <MudCheckBox T="bool">Require email address.</MudCheckBox>
    </MudPaper>

}

