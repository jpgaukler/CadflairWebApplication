@page "/{CompanyName}/products"
@layout ConfiguratorLayout

<PageTitle>Cadflair - Product Catalog</PageTitle>

<MudDrawerContainer Class="mud-height-full relative">

    <!-- product folder tree -->
    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.Left" Elevation="1" Variant="DrawerVariant.Persistent">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Folders</MudText>
            </MudDrawerHeader>
            <MudStack Class="mud-height-full overflow-auto">
                <MudTreeView T="ProductFolder" Items="_productFolders.ToHashSet()" Hover ExpandOnDoubleClick>
                    <ItemTemplate>
                        <MudTreeViewItem Items="@context.ChildFolders.ToHashSet()" OnClick="() => ProductFolder_OnClick(context)"
                                         Value="@context" Activated="_selectedProductFolder == context"
                                         Text="@context.DisplayName" Icon="@Icons.Material.Filled.Folder" />
                    </ItemTemplate>
                </MudTreeView>
                <MudSpacer />
                @*<MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="() => _showNewFolderDialog = true">New Folder</MudButton>*@
            </MudStack>
        </MudDrawer>
    </MudHidden>

    <MudStack Spacing="0" Class="mud-height-full px-5 pt-3 overflow-auto relative">
        <MudOverlay Visible="_initializing" Absolute Class="mud-background">
            <MudProgressCircular Color="Color.Default" Size="Size.Large" Indeterminate />
        </MudOverlay>

        <!-- header toolbar -->
        <div>
            <MudToolBar DisableGutters Dense>
                @if (_selectedProductFolder == null)
                {
                    <MudText>Please select a folder.</MudText>
                }
                else
                {
                    <MudBreadcrumbs Items="_breadcrumbItems" Class="align-start">
                        <SeparatorTemplate>
                            <MudIcon Icon="@Icons.Material.Filled.ChevronRight" Class="my-2 mx-0" />
                        </SeparatorTemplate>
                        <ItemTemplate Context="item">
                            <MudButton Class="pa-2" OnClick="() => BreadcrumbItem_OnClick(item)">
                                <MudText>@item.Text</MudText>
                            </MudButton>
                        </ItemTemplate>
                    </MudBreadcrumbs>
                }
                @*<MudText Typo="Typo.h6">Pick a product!</MudText>*@
                <MudSpacer />
                <MudIconButton OnClick="ToggleView_OnClick" Icon="@(_displayListView ? Icons.Material.Filled.GridView : Icons.Material.Filled.ViewList)" />
                @*<MudToggleIconButton @bind-Toggled="_displayListView" Icon="@Icons.Material.Filled.ViewList" ToggledIcon="@Icons.Material.Filled.GridView" />*@
                @*<MudIconButton OnClick="() => _showDetails = !_showDetails" Icon="@Icons.Filled.Info" />*@
            </MudToolBar>
            <MudDivider />
        </div>


        @if (_products.Count == 0)
        {
            <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mud-height-full">
                <MudStack AlignItems="AlignItems.Center">
                    <MudIcon Icon="@Icons.Material.Filled.InsertDriveFile" Size="Size.Large" />
                    <MudText>No products found.</MudText>
                </MudStack>
            </MudStack>
        }
        else
        {
            @if (_displayListView)
            {
                <!-- product list view -->
                <MudDataGrid T="Product" Items="_products"
                     RowClick="ProductsGrid_OnRowClick"
                     ColumnResizeMode="ResizeMode.Column"
                     Elevation="0" Height="100%" Class="overflow-auto"
                     Dense Hover FixedHeader Square>
                    <Columns>
                        <TemplateColumn Sortable="false" Filterable="false" Resizable="false" CellStyle="width:100px">
                            <CellTemplate>
                                <ProductThumbnail Product="@context.Item" Height="100" Width="100" />
                            </CellTemplate>
                        </TemplateColumn>
                        <PropertyColumn Property="x => x!.DisplayName" Title="Display Name" />
                    </Columns>
                </MudDataGrid>
            }
            else
            {
                <!-- product grid view -->
                <MudGrid Justify="Justify.FlexStart" Class="my-0 overflow-auto" Style="max-height: 100%">
                    @foreach (Product product in _products)
                    {
                        <MudItem>
                            <MudPaper>
                                <MudButton Variant="Variant.Text" Href=@($"/{_subscription?.SubdirectoryName}/products/{product.SubdirectoryName}")>
                                    <MudStack Style="width:140px">
                                        <ProductThumbnail Product="@product" Height="140" Width="140" />
                                        <MudText Typo="Typo.button" Style="text-overflow: ellipsis; overflow:hidden; white-space:nowrap;">@product.DisplayName</MudText>
                                    </MudStack>
                                </MudButton>
                            </MudPaper>
                        </MudItem>
                    }
                </MudGrid>
            }
        }
    </MudStack>
</MudDrawerContainer>



<MudDialog @bind-IsVisible="_showNewFolderDialog" Options="_productFolderDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">Add Folder</MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Label="Folder Name" @bind-Value="_newProductFolderName" Variant="Variant.Outlined" Immediate />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CancelNewProductFolder_OnClick">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="AddNewProductFolder_OnClick" Disabled="@(string.IsNullOrWhiteSpace(_newProductFolderName))">Ok</MudButton>
    </DialogActions>
</MudDialog>

@*<!-- product details drawer -->
<MudDrawer @bind-Open="_showDetails"
           Elevation="0"
           Variant="@DrawerVariant.Persistent"
           Anchor="Anchor.Right"
           ClipMode="DrawerClipMode.Always"
           Width="600px">

    <MudStack Row Class="mud-height-full overflow-auto">
        <MudDivider Vertical />
        <div>
            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="pa-5">
                <MudText Typo="Typo.h5">Details</MudText>
                <MudIconButton OnClick="() => _showDetails = false" Icon="@Icons.Filled.Close" />
            </MudStack>
            <MudStack Row>
                <div class="flex-grow-1">
                    <MudText Typo="Typo.body1">Display Name: @_selectedProduct?.DisplayName</MudText>
                    <MudText Typo="Typo.body1">Parameters:</MudText>
                    <MudText Typo="Typo.body1">Allows custom configurations:</MudText>
                    <MudText Typo="Typo.body1">Is public:</MudText>
                    <MudText Typo="Typo.body1">Copy link:</MudText>
                </div>
                <ProductThumbnail Product="@_selectedProduct" Height="400" Width="400" />
            </MudStack>

            <!-- product paramaters grid -->
            <MudDataGrid T="ILogicFormElement"
                         Items="_parameterGridItems"
                         Class="flex-grow-1 overflow-auto"
                         Striped
                         Dense>
                <Columns>
                    <Column T="ILogicFormElement" Field="@nameof(ILogicFormElement.Name)" Title="Display Name" />
                    <Column T="ILogicFormElement" Field="@nameof(ILogicFormElement.ParameterName)" Title="Parameter Name" />
                    <Column T="ILogicFormElement" Field="@nameof(ILogicFormElement.ParameterExpression)" Title="Default Value" />
                </Columns>
            </MudDataGrid>
        </div>
    </MudStack>
</MudDrawer>
*@


