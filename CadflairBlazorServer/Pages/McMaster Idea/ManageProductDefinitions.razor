@using Row = CadflairDataAccess.Models.Row;


@if (_selectedProductDefinition == null)
{
    <MudPaper Class="d-flex flex-column gap-3 pa-3">
        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.h6">Select A Product</MudText>
            <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="AddProductDefinition_OnClick">Add Product</MudButton>
        </MudStack>
        <MudPaper Outlined MinHeight="300px" MaxHeight="600px" Class="d-flex flex-column overflow-auto">
            @if (ProductDefinitions.Any())
            {
                <MudList Clickable>
                    @foreach (var productDefinition in ProductDefinitions)
                    {
                        <MudListItem Text="@productDefinition.Name" OnClick="() => ProductDefinition_OnClick(productDefinition)" />
                    }
                </MudList>
            }
            else
            {
                <div class="flex-grow-1 d-flex flex-column justify-center align-center">
                    <MudText>Click <strong>Add Product</strong> to add a new product</MudText>
                </div>
            }
        </MudPaper>
    </MudPaper>
}
else
{
    <!-- product details -->
    <MudPaper Class="pa-3 d-flex flex-column gap-3">
        <div>
            <MudButton StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="() => ProductDefinition_OnClick(null)">Back</MudButton>
        </div>

        <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
            <MudText Typo="Typo.h6">Edit Product Definition</MudText>
            <MudButton OnClick="DeleteProductDefinition_OnClick" StartIcon="@Icons.Material.Filled.Delete">Delete</MudButton>
        </MudStack>
        <MudStack Row>
            @if (_selectedProductDefinition.ThumbnailId == null)
            {
                <div class="relative">
                    <MudFileUpload T="IBrowserFile" FilesChanged="UploadThumbnail" Hidden="false" Class="flex-1"
                               InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20 cursor-pointer" InputStyle="opacity:0"
                               @ondragenter="@SetDragStyle" @ondragleave="@ClearDragStyle" @ondrop="@ClearDragStyle">
                        <ButtonTemplate>
                            <MudPaper Height="150px" Width="150px" Class="d-flex flex-column justify-center align-center gap-1" Style="@_dragStyle" Outlined>
                            <MudIcon Icon="@Icons.Material.Filled.AddAPhoto" Size="Size.Large" />
                            <MudText Typo="Typo.caption" Align="Align.Center">Click or Drop to add thumbnail</MudText>
                        </MudPaper>
                    </ButtonTemplate>
                </MudFileUpload>
            </div>
            }
            else
            {
                <MudPaper Height="150px" Width="150px" Outlined Class="d-flex align-center justify-center">
                <MudImage Src="/images/no-image.png" Alt="thumbnail image" Height="150" Width="150" />
                </MudPaper>
            }
            <MudStack Class="flex-grow-1">
                <MudTextField T="string" Value="_nameField" ValueChanged="Name_ValueChanged" Label="Name" Variant="Variant.Outlined" Immediate Required MaxLength="50" />
                <MudTextField T="string" Value="_descriptionField" ValueChanged="Description_ValueChanged" Label="Description" Variant="Variant.Outlined" Lines="3" MaxLength="500" Immediate />
                <MudTextField Value="_category?.Name" Label="Category" Placeholder="Select category" Variant="Variant.Outlined" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Edit" OnAdornmentClick="UpdateCategory_OnClick"/>
            </MudStack>
        </MudStack>
        <MudToolBar>
            <MudSpacer />
            <MudButton OnClick="UpdateProductDefinition_OnClick" Variant="Variant.Filled" Color="Color.Primary" Disabled="_isDirty == false">Save Changes</MudButton>
        </MudToolBar>
    </MudPaper>

    @if(_productTable != null)
    {
        <!-- product table -->
        <MudPaper Class="pa-3 d-flex flex-column gap-3">

            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                <MudText Typo="Typo.h6">Product Table</MudText>
                <MudSpacer/>
                <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="AddRow_OnClick" Disabled="!_productTable.Columns.Any()">Add Product</MudButton>
                <MudButton StartIcon="@Icons.Material.Filled.Edit" OnClick="EditColumns_OnClick">Edit Columns</MudButton>
            </MudStack>

            <MudTable Items="_productTable.Rows"
              RowEditPreview="(row) => RowEditPreview((Row)row)"
              RowEditCancel="(row) => RowEditCancel((Row)row)"
              RowEditCommit="async(row) => await RowEditCommit((Row)row)"
              IsEditRowSwitchingBlocked="true" ApplyButtonPosition="TableApplyButtonPosition.End" CanCancelEdit EditTrigger="TableEditTrigger.RowClick"
              FixedHeader HorizontalScrollbar Height="65dvh" Class="flex-grow-1 flex-shrink-1 overflow-auto" Outlined>
                <NoRecordsContent>
                    @if (_productTable.Columns.Any())
                    {
                        <MudText>No products.</MudText>
                        <MudText>Click <strong>Add Product</strong> to create a new product.</MudText>
                    }
                    else
                    {
                        <MudText>No Columns</MudText>
                        <MudText>Click <strong>Edit Columns</strong> to get started.</MudText>
                    }
                </NoRecordsContent>
                <HeaderContent>
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudTh Style="min-width:15ch;"><MudTableSortLabel SortBy="new Func<Row, object>(x => x.TableValues.FirstOrDefault(i => i.ColumnId == column.Id)?.Value!)">@column.Header</MudTableSortLabel></MudTh>
                    }
                </HeaderContent>
                <RowTemplate>
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudTd DataLabel="@column.Header">@context.TableValues.FirstOrDefault(i => i.ColumnId == column.Id)?.Value</MudTd>
                    }
                </RowTemplate>
                <RowEditingTemplate>
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudTd DataLabel="@column.Header">
                            <MudTextField @bind-Value="@context.TableValues.First(i => i.ColumnId == column.Id).Value" Required />
                        </MudTd>
                    }
                </RowEditingTemplate>
            </MudTable>

            <!-- events -->
@*            <MudPaper Height="350px" Class="d-flex flex-column pa-3 mud-background-gray flex-shrink-0">
                <MudText Typo="Typo.h6">Events</MudText>
                <MudStack Class="flex-grow-1 overflow-auto">
                    @foreach (var message in _events)
                    {
                        <MudText Typo="@Typo.body2">@message</MudText>
                    }
                </MudStack>
                @if (_events.Count > 0)
                {
                    <div class="d-flex">
                        <MudSpacer />
                        <MudButton Variant="Variant.Filled" OnClick="() => _events.Clear()">Clear</MudButton>
                    </div>
                }
            </MudPaper>
*@
        </MudPaper>
    }

    <!-- attachments -->
    <MudPaper Class="pa-3 d-flex flex-column gap-3">
        <MudText Typo="Typo.h5">Upload Attachments</MudText>
        <MudText Typo="Typo.body1">Drag and drop files to upload attachments. Files will be linked to products with matching part numbers.</MudText>
        <MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="Attachments_FilesChanged" Accept=".stp, .ipt" MaximumFileCount="999"
                   InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0;"
                   @ondragenter="@SetDragStyle" @ondragleave="@ClearDragStyle" @ondrop="@ClearDragStyle">
            <ButtonTemplate>
                <MudPaper Height="400px" Outlined Class="overflow-auto" Style="@_dragStyle">
                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mud-height-full">
                        <MudIcon Icon="@Icons.Material.Filled.UploadFile" Size="Size.Large" Color="Color.Default" />
                        <MudText Typo="Typo.body1">Drop files or click</MudText>
                    </MudStack>
                </MudPaper>
            </ButtonTemplate>
        </MudFileUpload>
    </MudPaper>

    <!-- security -->
    <MudPaper Class="pa-3 d-flex flex-column gap-3">
        <MudText Typo="Typo.h5">Security</MudText>
        <MudCheckBox T="bool">Allow attachment downloads.</MudCheckBox>
        <MudCheckBox T="bool">Require email address.</MudCheckBox>
    </MudPaper>

}

