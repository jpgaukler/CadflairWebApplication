@page "/{CompanyName}/products"

<PageTitle>Cadflair - Product Catalog</PageTitle>

<div style="height: calc(100dvh - var(--mud-appbar-height));">
    <MudStack Row Spacing="0" Class="mud-height-full">

        <!-- product folder tree -->
        <MudStack Class="pa-3" Style="min-width:275px;">
            <MudTreeView T="ProductFolderTreeItem" Items="_productFolderTreeItems"
                         SelectedValueChanged="SelectedTreeItemChanged"
                         Hover ExpandOnDoubleClick>
                <ItemTemplate>
                    <MudTreeViewItem T="ProductFolderTreeItem" Items="@context.ChildItems" Value="@context"
                                     Text="@context.ProductFolder.DisplayName" Icon="@Icons.Material.Filled.Folder" />
                </ItemTemplate>
            </MudTreeView>
        </MudStack>

        <MudStack Class="flex-grow-1 mud-height-full">
            <MudStack Spacing="0" Class="flex-grow-1 pa-3 overflow-auto">
                <!-- header toolbar -->
                <div>
                    <MudToolBar DisableGutters Dense>
                        @if (_breadcrumbItems.Count < 1)
                        {
                            <MudText>Please select a folder.</MudText>
                        }
                        else
                        {
                            <MudBreadcrumbs Items="_breadcrumbItems" Class="align-start">
                                <SeparatorTemplate>
                                    <MudIcon Icon="@Icons.Material.Filled.ChevronRight" />
                                </SeparatorTemplate>
                                <ItemTemplate Context="item">
                                    <MudText>@item.Text</MudText>
                                </ItemTemplate>
                            </MudBreadcrumbs>
                        }
                        <MudSpacer />
                        <MudIconButton OnClick="ToggleView_OnClick" Icon="@(_displayListView ? Icons.Material.Filled.GridView : Icons.Material.Filled.ViewList)" />
                        @*<MudToggleIconButton @bind-Toggled="_displayListView" Icon="@Icons.Material.Filled.ViewList" ToggledIcon="@Icons.Material.Filled.GridView" />*@
                        @*<MudIconButton OnClick="() => _showDetails = !_showDetails" Icon="@Icons.Filled.Info" />*@
                    </MudToolBar>
                    <MudDivider />
                </div>

                @if (_initializing)
                {
                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mud-height-full">
                        <MudProgressCircular Color="Color.Default" Indeterminate Size="Size.Large" />
                    </MudStack>
                }
                else
                {
                    if (_products.Count == 0)
                    {
                        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mud-height-full">
                            <MudStack AlignItems="AlignItems.Center">
                                <MudIcon Icon="@Icons.Material.Filled.InsertDriveFile" Size="Size.Large" />
                                <MudText>No products found.</MudText>
                            </MudStack>
                        </MudStack>
                    }
                    else
                    {
                        if (_displayListView)
                        {
                            <!-- product list view -->
                            <MudDataGrid T="Product" Items="_products"
                                         RowClick="ProductsGrid_OnRowClick"
                                         ColumnResizeMode="ResizeMode.Column"
                                         Elevation="0" Height="100%" Class="overflow-auto"
                                         Dense Hover FixedHeader>
                                <Columns>
                                    <TemplateColumn Sortable="false" Filterable="false" Resizable="false" CellStyle="width:100px">
                                        <CellTemplate>
                                            <ProductThumbnail Product="@context.Item" Height="100" Width="100" />
                                        </CellTemplate>
                                    </TemplateColumn>
                                    <PropertyColumn Property="x => x.DisplayName" Title="Display Name" />
                                </Columns>
                            </MudDataGrid>
                        }
                        else
                        {
                            <!-- product grid view -->
                            <MudGrid Justify="Justify.FlexStart" Class="my-5 overflow-auto" Style="max-height: 100%">
                                @foreach (Product product in _products)
                                {
                                    <MudItem>
                                        <MudPaper>
                                            <MudButton Variant="Variant.Text" Href=@($"/{_subscription.SubdirectoryName}/products/{product.SubdirectoryName}")>
                                                <MudStack>
                                                    <ProductThumbnail Product="@product" Height="200" Width="200" />
                                                    @product.DisplayName
                                                </MudStack>
                                            </MudButton>
                                        </MudPaper>
                                    </MudItem>
                                }
                            </MudGrid>
                        }
                    }
                }
            </MudStack>
        </MudStack>
    </MudStack>



</div>


@*<!-- product details drawer -->
<MudDrawer @bind-Open="_showDetails"
           Elevation="0"
           Variant="@DrawerVariant.Persistent"
           Anchor="Anchor.Right"
           ClipMode="DrawerClipMode.Always"
           Width="600px">

    <MudStack Row Class="mud-height-full overflow-auto">
        <MudDivider Vertical />
        <div>
            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center" Class="pa-5">
                <MudText Typo="Typo.h5">Details</MudText>
                <MudIconButton OnClick="() => _showDetails = false" Icon="@Icons.Filled.Close" />
            </MudStack>
            <MudStack Row>
                <div class="flex-grow-1">
                    <MudText Typo="Typo.body1">Display Name: @_selectedProduct?.DisplayName</MudText>
                    <MudText Typo="Typo.body1">Parameters:</MudText>
                    <MudText Typo="Typo.body1">Allows custom configurations:</MudText>
                    <MudText Typo="Typo.body1">Is public:</MudText>
                    <MudText Typo="Typo.body1">Copy link:</MudText>
                </div>
                <ProductThumbnail Product="@_selectedProduct" Height="400" Width="400" />
            </MudStack>

            <!-- product paramaters grid -->
            <MudDataGrid T="ILogicFormElement"
                         Items="_parameterGridItems"
                         Class="flex-grow-1 overflow-auto"
                         Striped
                         Dense>
                <Columns>
                    <Column T="ILogicFormElement" Field="@nameof(ILogicFormElement.Name)" Title="Display Name" />
                    <Column T="ILogicFormElement" Field="@nameof(ILogicFormElement.ParameterName)" Title="Parameter Name" />
                    <Column T="ILogicFormElement" Field="@nameof(ILogicFormElement.ParameterExpression)" Title="Default Value" />
                </Columns>
            </MudDataGrid>
        </div>
    </MudStack>
</MudDrawer>
*@

