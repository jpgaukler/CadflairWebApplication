@using Row = CadflairEntityFrameworkDataAccess.Models.Row;

@page "/catalog/mcmaster-catalog"
@layout ConfiguratorLayout

<PageTitle>McMaster Style Catalog Idea</PageTitle>

<MudDrawerContainer Class="mud-height-full relative">

    <!-- sidebar -->
    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.Left" Elevation="1" Variant="DrawerVariant.Persistent" Width="300px">
            @if (_selectedProductDefinition != null)
            {
                <!-- filters -->
                <MudStack Class="pa-3">
                    <MudText Typo="Typo.h6">Filter</MudText>
                    @foreach (var column in _productTable.Columns)
                    {
                        <MudSelect T="string" SelectedValuesChanged="(values) => ColumnFilter_OnSelect(column, values)" 
                                   Label="@column.Header" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Clearable MultiSelection >
                            @foreach (var tableValue in _rows.Select(i => i.TableValues.First(i => i.ColumnId == column.Id)).Distinct())
                            {
                                <MudSelectItem Value="tableValue.Value">@tableValue.Value</MudSelectItem>
                            }
                        </MudSelect>
                    }
                </MudStack>
            }
            else
            {
                <!-- product categories -->
                <MudStack Spacing="0" Class="pa-1">
                    <MudText Typo="Typo.body1" Class="pb-1">Choose a category</MudText>
                    <MudList Clickable>
                        @foreach (var category in _categories)
                        {
                            <MudListItem OnClick="() => Category_OnClick(category)" Variant="Variant.Outlined">@category.Name</MudListItem>
                        }
                    </MudList>
                </MudStack>
            }
        </MudDrawer>
    </MudHidden>

    <MudStack Class="mud-height-full px-5 pt-3 overflow-auto relative">
        <MudOverlay Visible="_initializing" Absolute Class="mud-background">
            <MudProgressCircular Color="Color.Default" Size="Size.Large" Indeterminate />
        </MudOverlay>

        <!-- header toolbar -->
        <div>
            <MudToolBar DisableGutters Dense>
                @*<CategoryBreadcrumbs ProductCategory="_selectedProductCategory" ProductCategoryClicked="ProductCategory_OnClick" />*@
            </MudToolBar>
            <MudDivider />
        </div>

        <MudStack Class="flex-grow-1 overflow-auto">
            @if (_selectedCategory == null)
            {
                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="flex-grow-1">
                    <MudStack AlignItems="AlignItems.Center">
                        <MudIcon Icon="@Icons.Material.Filled.Folder" Size="Size.Large" />
                        <MudText Typo="Typo.body2">Select a category.</MudText>
                    </MudStack>
                </MudStack>
            }
            else
            {
                <MudGrid Justify="Justify.FlexStart" Class="ma-0" Spacing="0">
                    @if (_selectedProductDefinition != null)
                    {
                        <!-- products -->
                        <MudStack>
                            <MudText Typo="Typo.h4" Align="Align.Left" Color="Color.Primary">PRODUCT RECORDS</MudText>
                            <MudText Typo="Typo.body1" Align="Align.Left">Count: @_rows.Count</MudText>
                            <MudTable Items="_rows.Where(_filter)">
                                <HeaderContent>
                                    @foreach (var column in _productTable.Columns)
                                    {
                                        <MudTh><MudTableSortLabel SortBy="new Func<Row, object>(x=>x.TableValues.First(i => i.ColumnId == column.Id).Value)">@column.Header</MudTableSortLabel></MudTh>
                                    }
                                    <MudTh>Buy</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    @foreach (var column in _productTable.Columns)
                                    {
                                        <MudTd DataLabel="@column.Header">@context.TableValues.FirstOrDefault(i => i.ColumnId == column.Id)?.Value</MudTd>
                                    }
                                    <MudTd>
                                        @*<MudButton StartIcon="@Icons.Material.Filled.RemoveRedEye" OnClick="() => Preview_OnClick(context.BucketKey, context.ObjectKey)">Preview</MudButton>*@
                                        @*<MudIconButton Icon="@Icons.Material.Filled.Download" OnClick="() => Download_OnClick(context.BucketKey, context.ObjectKey)" />*@
                                    </MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudStack>
                    }
                    else if (_selectedCategory.ChildCategories.Any())
                    {
                        <!-- child catagores -->
                        @foreach (var category in _selectedCategory.ChildCategories)
                        {
                            <MudItem Class="pa-2">
                                <MudButton OnClick="() => Category_OnClick(category)" Variant="Variant.Outlined">
                                    <MudStack Row AlignItems="AlignItems.Center">
                                        <MudPaper Height="50px" Width="50px" Elevation="0" Class="d-flex align-center justify-center">
                                            <MudImage Src="/images/no-image.png" Alt="thumbnail image" Height="50" Width="50" />
                                        </MudPaper>
                                        <MudStack Spacing="0">
                                            <MudText Typo="Typo.h4" Align="Align.Left" Color="Color.Primary">PRODUCT CATEGORY</MudText>
                                            <MudText Typo="Typo.h6" Align="Align.Left">Id: @category.Id</MudText>
                                            <MudText Typo="Typo.h6" Align="Align.Left">@category.Name</MudText>
                                            <MudText Typo="Typo.body2" Align="Align.Left">@category.Description</MudText>
                                        </MudStack>
                                    </MudStack>
                                </MudButton>
                            </MudItem>
                        }
                    }
                    else if (_selectedCategory.ProductDefinitions.Any())
                    {
                        <!-- product definitions -->
                        @foreach (var productDefinition in _selectedCategory.ProductDefinitions)
                        {
                            <MudItem Class="pa-2">
                                <MudButton OnClick="() => ProductDefinition_OnClick(productDefinition)" Variant="Variant.Outlined">
                                    <MudStack Row AlignItems="AlignItems.Center">
                                        <MudPaper Height="50px" Width="50px" Elevation="0" Class="d-flex align-center justify-center">
                                            <MudImage Src="/images/no-image.png" Alt="thumbnail image" Height="50" Width="50" />
                                        </MudPaper>
                                        <MudStack Spacing="0">
                                            <MudText Typo="Typo.h4" Align="Align.Left" Color="Color.Primary">PRODUCT DEFINITION</MudText>
                                            <MudText Typo="Typo.h6" Align="Align.Left">Id: @productDefinition.Id</MudText>
                                            <MudText Typo="Typo.h6" Align="Align.Left">@productDefinition.Name</MudText>
                                            <MudText Typo="Typo.body2" Align="Align.Left">@productDefinition.Description</MudText>
                                        </MudStack>
                                    </MudStack>
                                </MudButton>
                            </MudItem>
                        }
                    }
                </MudGrid>
            }
        </MudStack>
    </MudStack>
</MudDrawerContainer>

