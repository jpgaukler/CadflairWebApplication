@inject IJSRuntime _js
@inject ForgeServicesManager _forgeServicesManager

<div id="forgeViewer" style="background:gray; position: relative; width:100%; height:100%"></div>

@code {

    public async Task ViewDocument(string encodedUrn) 
    {
        //get public token for viewables
        var token = await _forgeServicesManager.AuthorizationService.GetPublic();

        if (await _forgeServicesManager.ModelDerivativeService.TranslationExists(encodedUrn))
        {
            //define input parameters as JSON
            var parameters = new
            {
                Token = token.access_token,
                Urn = encodedUrn
            };

            //invoke the viewer
            await _js.InvokeVoidAsync("launchViewer", parameters);
        }
        else
        {
            Debug.WriteLine($"No derivative");
            //need to translate object
            //await _forgeServicesManager.ModelDerivativeService.TranslateObject(forgeObject.encoded_urn, "Dresser Configurator.ipt");
        }
    }

    public async Task ViewDocument(string bucketKey, string objectKey) 
    {
        //get public token for viewables
        var token = await _forgeServicesManager.AuthorizationService.GetPublic();

        //get forge object id
        var forgeObject = await _forgeServicesManager.ObjectStorageService.GetObjectDetails(bucketKey, objectKey);
        ViewDocument(forgeObject.encoded_urn);
    }

}
