// <auto-generated />
using System;
using CadflairEntityFrameworkDataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CadflairEntityFrameworkDataAccess.Migrations
{
    [DbContext(typeof(CadflairEntityFrameworkDataAccessContext))]
    partial class CadflairEntityFrameworkDataAccessContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ForgeObjectKey")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RowId");

                    b.ToTable("Attachment");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("ThumbnailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductTableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTableId");

                    b.ToTable("Column");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.ProductDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ForgeBucketKey")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ThumbnailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("ProductDefinition");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.ProductTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductDefinitionId");

                    b.ToTable("ProductTable");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Row", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductTableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTableId");

                    b.ToTable("Row");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.TableValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColumnId")
                        .HasColumnType("int");

                    b.Property<int>("RowId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.HasIndex("RowId");

                    b.ToTable("TableValue");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Base64String")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Thumbnail");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Attachment", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Row", "Row")
                        .WithMany()
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Row");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Category", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Thumbnail", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("ParentCategory");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Column", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.ProductTable", "ProductTable")
                        .WithMany("Columns")
                        .HasForeignKey("ProductTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTable");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.ProductDefinition", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Category", "Category")
                        .WithMany("ProductDefinitions")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Thumbnail", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("Category");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.ProductTable", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.ProductDefinition", "ProductDefinition")
                        .WithMany()
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductDefinition");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Row", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.ProductTable", "ProductTable")
                        .WithMany("Rows")
                        .HasForeignKey("ProductTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTable");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.TableValue", b =>
                {
                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Column", "Column")
                        .WithMany()
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CadflairEntityFrameworkDataAccess.Models.Row", "Row")
                        .WithMany("TableValues")
                        .HasForeignKey("RowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");

                    b.Navigation("Row");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("ProductDefinitions");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.ProductTable", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Rows");
                });

            modelBuilder.Entity("CadflairEntityFrameworkDataAccess.Models.Row", b =>
                {
                    b.Navigation("TableValues");
                });
#pragma warning restore 612, 618
        }
    }
}
