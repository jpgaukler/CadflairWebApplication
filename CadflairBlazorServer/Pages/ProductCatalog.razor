@layout ConfiguratorLayout
@page "/productcatalog"
@using System.Text.Json
@inject IJSRuntime _js

<!--Drawer-->
<MudDrawer @bind-Open="@_drawerOpen"
           Variant="@DrawerVariant.Persistent"
           ClipMode="DrawerClipMode.Always"
           Anchor="Anchor.Left"
           Width="30%">

    <!--Drawer Header-->
    <MudDrawerHeader>
        <MudText Typo="Typo.h5">Parameters</MudText>
    </MudDrawerHeader>
    
    <!--Drawer Content-->
    <MudStack Class="flex-grow-1 overflow-auto" Spacing="0">

        <!--Form Inputs-->
        <MudStack Class="flex-grow-1 px-3 overflow-auto">

            @if (_params.Items != null)
            {
                foreach (ILogicUiElement element in _params.Items)
                {
                    <ProductInput Element="@element" @key="element"></ProductInput>
                }
            }
        </MudStack>

        <!--Buttons-->
        <MudStack Class="pa-3">
            <MudButton Variant="@_buttonVariant" Color="Color.Primary" FullWidth="true">Submit</MudButton>
            <MudButton Variant="@_buttonVariant" Color="Color.Primary" FullWidth="true">Download Pdf</MudButton>
            <MudButton Variant="@_buttonVariant" Color="Color.Primary" FullWidth="true">Download Step</MudButton>
        </MudStack>

    </MudStack>
</MudDrawer>

<!--Collapse Button-->
<MudStack Class="d-flex flex-row absolute z-10 ma-1">
    <MudToggleIconButton @bind-Toggled="@_drawerOpen"
                         Variant="Variant.Filled"
                         Style="border-radius:50%"
                         Icon="@Icons.Filled.ChevronRight" Color="@Color.Primary" Size="Size.Large"
                         ToggledIcon="@Icons.Filled.ChevronLeft" ToggledColor="@Color.Primary" ToggledSize="Size.Large" />

</MudStack>

<!--Viewer-->
<div class="d-flex ma-0 pa-0" style="height: calc(100vh - var(--mud-appbar-height)">
    <ForgeViewer />
</div>



@code
{
    private Variant _buttonVariant = Variant.Outlined;
    private bool _drawerOpen = true;
    private ILogicUiElement _params = new();

    private List<string> myStrings = new()
    {
        "test",
        "test2",
        "recurse this",
        "test3"
    };

    protected override void OnInitialized()
    {
        //string fileName = System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), @"\wwwroot\js\Form 1.json");
        string fileName = @"C:\Users\Admin\source\repos\CadflairWebApplication\Inventor Files\Form 1.json";
        string jsonText = System.IO.File.ReadAllText(fileName);
        Debug.WriteLine(jsonText);

        _params = JsonSerializer.Deserialize<ILogicUiElement>(jsonText);
    }

}
