@inject DataServicesManager _dataServicesManager

<h3>Accounts</h3>

@*<div class="form-container">
    <SfTextBox Placeholder="Company Name" @bind-Value="_companyNameValue" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
    <SfTextBox Placeholder="Sub Directory" @bind-Value="_subDirectoryValue" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>

    <SfDropDownList TItem="AccountType" TValue="int" DataSource="@_accountTypes" @bind-Value="_accountTypeValue" Placeholder="Select Account Type">
        <DropDownListFieldSettings Text="@nameof(AccountType.Name)" Value="@nameof(AccountType.Id)" />
    </SfDropDownList>

    <SfButton OnClick="AddAccount" IsPrimary="true" CssClass="e-outline">Add Account</SfButton>
    <SfButton OnClick="GetAccount" IsPrimary="true" CssClass="e-outline">Get Account</SfButton>
</div>

<div class="grid-container">
    <SfGrid DataSource="@_accounts">
        <GridColumns>
            <GridColumn Field=@nameof(Account.Id) HeaderText="Id" />
            <GridColumn Field=@nameof(Account.AccountTypeId) HeaderText="Type Id" />
            <GridColumn Field=@nameof(Account.CompanyName) HeaderText="Company Name" />
            <GridColumn Field=@nameof(Account.SubDirectory) HeaderText="Sub-Directory" />
            <GridColumn Field=@nameof(Account.CreatedById) HeaderText="Created By" />
            <GridColumn Field=@nameof(Account.CreatedOn) HeaderText="Created On" />
            <GridColumn Field=@nameof(Account.OwnerId) HeaderText="Owner" />
            <GridColumn Field=@nameof(Account.SubscriptionExpiresOn) HeaderText="Expires On" />
        </GridColumns>
    </SfGrid>
</div>
*@

@code {

    //data
    private List<Account> _accounts = new();
    private List<AccountType> _accountTypes = new();

    //form variables
    private string _companyNameValue = string.Empty;
    private string _subDirectoryValue = string.Empty;
    private int _accountTypeValue;

    protected override async Task OnInitializedAsync()
    {
        //initialize form data
        _accountTypes = await _dataServicesManager.AccountService.GetAccountTypes();

        //initialize grid
        await RefreshDataGrid();
    }

    private async Task RefreshDataGrid()
    {
        _accounts = await _dataServicesManager.AccountService.GetAccounts();
    }

    private async Task AddAccount()
    {
        Account newAccount = new()
        {
            CompanyName = _companyNameValue,
            SubDirectory = _subDirectoryValue,
            CreatedById = 1,
            OwnerId = 1,
            AccountTypeId = _accountTypeValue,
            SubscriptionExpiresOn = DateTime.Now,
        };

        await _dataServicesManager.AccountService.CreateAccount(newAccount);
        await RefreshDataGrid();
    }

    private async Task GetAccount()
    {
        var acc = await _dataServicesManager.AccountService.GetAccountById(1);
        _companyNameValue = acc.CompanyName;
    }

}
